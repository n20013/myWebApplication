{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vagrant/projects/react_lessons/src/App.jsx\";\nimport React from 'react';\nimport './App.css';\n\nconst TitleView = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 28\n}, this);\n\n_c = TitleView;\n\nconst LoadingView = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 30\n}, this);\n\n_c2 = LoadingView;\n\nconst InitialView = props => props.state.loading ? /*#__PURE__*/_jsxDEV(LoadingView, {\n  text: \"Now Loading...\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this) : /*#__PURE__*/_jsxDEV(MainView, {\n  value: props.state.value,\n  onChange: props.onChange\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\n_c3 = InitialView;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      value: null\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      value: 'initial',\n      loading: false\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(InitialView, {\n      state: this.state,\n      onChange: this.handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  handleUpdate(event) {\n    const value = event.target.value;\n    this.setState({\n      value: value\n    });\n  }\n\n}\n\nconst MainView = props => {\n  console.log('mainview', props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleView, {\n      children: \"EXPORT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestForm, {\n      onChange: props.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestView, {\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = MainView;\n\nconst TestForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    onChange: props.onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_c5 = TestForm;\n\nconst TestView = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_c6 = TestView;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TitleView\");\n$RefreshReg$(_c2, \"LoadingView\");\n$RefreshReg$(_c3, \"InitialView\");\n$RefreshReg$(_c4, \"MainView\");\n$RefreshReg$(_c5, \"TestForm\");\n$RefreshReg$(_c6, \"TestView\");","map":{"version":3,"sources":["/home/vagrant/projects/react_lessons/src/App.jsx"],"names":["React","TitleView","props","children","LoadingView","text","InitialView","state","loading","value","onChange","App","Component","constructor","handleUpdate","bind","componentDidMount","setState","render","console","log","event","target","MainView","TestForm","TestView"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAS,GAAGC,KAAK,iBAAI;AAAA,YAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,QAA3B;;KAAMF,S;;AACN,MAAMG,WAAW,GAAGF,KAAK,iBAAI;AAAA,YAAKA,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,QAA7B;;MAAMD,W;;AACN,MAAME,WAAW,GAAGJ,KAAK,IAAIA,KAAK,CAACK,KAAN,CAAYC,OAAZ,gBACzB,QAAC,WAAD;AAAa,EAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,QADyB,gBAEzB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEN,KAAK,CAACK,KAAN,CAAYE,KAA7B;AAAoC,EAAA,QAAQ,EAAEP,KAAK,CAACQ;AAApD;AAAA;AAAA;AAAA;AAAA,QAFJ;;MAAMJ,W;;AAIN,MAAMK,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAAEX,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAIA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,OAAO,EAAE;AAA7B,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,wBAAO,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKA,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKO;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDA,EAAAA,YAAY,CAAEO,KAAF,EAAS;AACnB,UAAMZ,KAAK,GAAGY,KAAK,CAACC,MAAN,CAAab,KAA3B;AACA,SAAKQ,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACD;;AAtB+B;;AAyBlC,MAAMc,QAAQ,GAAGrB,KAAK,IAAI;AACxBiB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,KAAxB;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA,KAAK,CAACQ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAER,KAAK,CAACO;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CATD;;MAAMc,Q;;AAWN,MAAMC,QAAQ,GAAGtB,KAAK,IAAI;AACxB,sBAAO;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEA,KAAK,CAACQ;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMc,Q;;AAIN,MAAMC,QAAQ,GAAGvB,KAAK,IAAI;AACxB,sBAAO;AAAA,cAAMA,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMgB,Q;AAIN,eAAed,GAAf","sourcesContent":["import React from 'react'\nimport './App.css'\n\nconst TitleView = props => <h1>{props.children}</h1>\nconst LoadingView = props => <h1>{props.text}</h1>\nconst InitialView = props => props.state.loading\n  ? <LoadingView text='Now Loading...' />\n  : <MainView value={props.state.value} onChange={props.onChange} />\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loading: true,\n      value: null\n    }\n    this.handleUpdate = this.handleUpdate.bind(this)\n  }\n\n  componentDidMount () {\n    this.setState({ value: 'initial', loading: false })\n  }\n\n  render () {\n    console.log(this.state)\n    return <InitialView state={this.state} onChange={this.handleUpdate} />\n  }\n\n  handleUpdate (event) {\n    const value = event.target.value\n    this.setState({ value: value })\n  }\n}\n\nconst MainView = props => {\n  console.log('mainview', props)\n  return (\n    <>\n      <TitleView>EXPORT</TitleView>\n      <TestForm onChange={props.onChange} />\n      <TestView value={props.value} />\n    </>\n  )\n}\n\nconst TestForm = props => {\n  return <input type='text' onChange={props.onChange} />\n}\n\nconst TestView = props => {\n  return <div>{props.value}</div>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}